% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S03-contrasts_over_cell_means.R
\name{omnibus_tests_for_cell_means}
\alias{omnibus_tests_for_cell_means}
\title{Compute Omnibus Tests for Cell Means}
\usage{
omnibus_tests_for_cell_means(
  est,
  contrast_list,
  grp = NULL,
  dm = NULL,
  digits = 3
)
}
\arguments{
\item{est}{Output from the \code{\link{fit_with_brm}}
function.}

\item{contrast_list}{A list of list, each internal
list specifying a contrast to compute over the
cell means, where \code{I} gives the column indices
to include from the cell means, and \code{W} gives
the weights.}

\item{grp}{A vector with the column names for the
grouping factors.}

\item{dm}{An optional data frame with the grouping
factors and the weights for the population-level
effects needed to compute the cell means.}

\item{digits}{The number of digits to round to when
reporting posterior p-values.}
}
\value{
A list with the estimate, estimated
posterior p-value, a character string with
a nicely formatted p-value, and a matrix with
the posterior samples for the estimated cell means.
}
\description{
Convenience function that computes
an omnibus test over a set of
contrasts. First, posterior samples
over cell means (based on grouping
factors in the fitted data) are
extracted. Next, user-specified
contrasts are computed over the cell
means. Finally, an omnibus test checking
whether all contrasts are equal to
zero is computed.
}
\examples{
# Example data set with 2 x 3 design
data( "ToothGrowth" )
df <- ToothGrowth
# Outcome is length of tooth
df$Y <- df$len
# Define terms for main effects of delivery type
# and dose and interaction between them
# and standardize all predictors
df$PC.ZS.Type <- scale( df$supp == 'OJ' )
df$PC.ZS.Dose <- scale( df$dose )
df$PC.ZS.Type_x_dose <- df$PC.ZS.Type * df$PC.ZS.Dose

# Fit linear model using 'brms'
alg <- algorithm_settings( quick_fit = T, rng_seed = 111 )
prs <- c(
  prior_string( 'normal( 18.81, 3 )', class = 'Intercept' ),
  prior_string( 'normal( 0.0, 0.8 )', class = 'b' ),
  prior_string( 'student_t( 3, 0.0, 7.6 )', class = 'sigma' )
)
est <- fit_with_brm( df, Y ~ PC.ZS.Type + PC.ZS.Dose + PC.ZS.Type_x_dose,
                     prior = prs, algorithm = alg )

# Grouping factors
grp <- c( 'supp', 'dose' )
# Design matrix over grouping factors
dm <- aggregate( df[,5:7], df[,grp], mean )
# Data frame for results
res <- data.frame(
  Effect = c( 'Type', 'Dose', 'Type x Dose' ),
  p_value = '',
  stringsAsFactors = F
)

# Create list specifying contrasts to
# compute main effect for delivery type
cl <- list( C1 = list( I = 1:6,
                       W = c(-1,1)[ (dm$supp == 'VC') + 1 ] ) )
tst <- omnibus_tests_for_cell_means(
  est, cl, grp = c( 'supp', 'dose' )
)
res$p_value[1] <- tst$char

# Create list specifying contrasts to
# compute main effect for dose
cl <- list(
  C1 = list( I = 1:4,
             W = c(-1,-1,1,1) ),
  C2 = list( I = c(1:2,5:6),
             W = c(-1,-1,1,1) )
)
tst <- omnibus_tests_for_cell_means(
  est, cl, grp = c( 'supp', 'dose' )
)
res$p_value[2] <- tst$char

# Create list specifying contrasts to
# compute interaction between type
# and dose
cl <- list(
  C1 = list( I = 1:4,
             W = c(1,-1,-1,1) ),
  C2 = list( I = c(1:2,5:6),
             W = c(1,-1,-1,1) )
)
tst <- omnibus_tests_for_cell_means(
  est, cl, grp = c( 'supp', 'dose' )
)
res$p_value[3] <- tst$char

# Display results
print( res )

# Classical approach
print( anova( lm( Y ~ supp*dose, data = df ) ) )

}
